
<html>
<body>
  <div class="conainer">
    <div class="row">
      <div class="col-md-offset-1 col-md-5">
        <p>Origin Requested: <%= @origin_formatted_address%></p>
        <p>Departure Time Requested: <%= DateTime.parse(@date_time_departure)%></p>
        <div id="origin_map" style="width: 360px; height: 360px;"></div>
      </div>

      <div class="col-md-5">
        <p>Destination Requested:<%= @destination_formatted_address%></p>
        <p>Estimated Arrival Time: <%= @date_time_arrival_formatted%>
        </p>
        <div id="destination_map" style="width: 360px; height: 360px;"></div>
      </div>

    </div>

    <div class="row">
      <div class="col-md-offset-1 col-md-8">
        <h4> Expected Travel Time: <%=@duration_in_traffic[1]%> (Pessimistic: <%=@duration_in_traffic[3]%>) </h4>
      </div>
    </div>
    <div class="row">
      <div class="alert alert-info" role="alert">
        <h4> You will be pooled with people that will arrive <strong><% if @date_time_arrival_formatted.to_s(:time)<"09:00"%>
          <%=@destination_arrival_time_interval="before 09:00 Hrs"%>
          <% elsif @date_time_arrival_formatted.to_s(:time)<"11:00"%>
          <%=@destination_arrival_time_interval="between 09:00 - 11:00 Hrs"%>
          <% elsif @date_time_arrival_formatted.to_s(:time)<"13:00"%>
          <%=@destination_arrival_time_interval="between 11:00 - 13:00 Hrs"%>
          <% elsif @date_time_arrival_formatted.to_s(:time)<"15:00"%>
          <%=@destination_arrival_time_interval="between 13:00 - 15:00 Hrs"%>
          <% elsif @date_time_arrival_formatted.to_s(:time)<"17:00"%>
          <%=@destination_arrival_time_interval="between 15:00 - 17:00 Hrs"%>
          <% elsif @date_time_arrival_formatted.to_s(:time)<"19:00"%>
          <%=@destination_arrival_time_interval="between 17:00 - 19:00 Hrs"%>
          <% elsif @date_time_arrival_formatted.to_s(:time)<"21:00"%>
          <%=@destination_arrival_time_interval="between 19:00 - 21:00 Hrs"%>
          <% else %>
          <%=@destination_arrival_time_interval="after 21:00 Hrs"%>
          <%end%> </strong> </h4>
        </div>
      </div>




      <div class="row">
        <div class="col-md-offset-1 col-md-6">
          <div id="directions" style='width: 800px; height: 400px; margin: 2%'></div>
        </div>
      </div>

      <div class="row">
        <div class="col-md-offset-1 col-md-6">
          <form action="/create_route_request">
            <input name="authenticity_token" type="hidden" value="<%= form_authenticity_token %>">
          </div>
          <div class="row">
            <!-- Origin Parameters -->
            <div class="form-group">
              <input type="hidden" id="user_id" name="user_id" placeholder="User" class="form-control" value="<%= current_user.id %>">
              <input type="hidden" id="origin_query" name="origin_query" placeholder="Origin Query" class="form-control" value="<%=@origin_request%>">
              <input type="hidden" id="origin_city" name="origin_city" placeholder="Origin City" class="form-control" value="<%=@origin_city.to_s%>">
              <input type="hidden" id="origin_formatted_address" name="origin_formatted_address" placeholder="Origin Place" class="form-control" value="<%=@origin_formatted_address.to_s%>">
              <input type="hidden" id="google_id_origin" name="google_id_origin" placeholder="Origin Google ID" class="form-control" value="<%=@google_id_origin.to_s%>">
              <input type="hidden" id="origin_google_suggested_departure_time" name="origin_google_suggested_departure_time" placeholder="Departure Time" class="form-control" value="<%=DateTime.parse(@date_time_departure).to_s%>">
              <input type="hidden" id="origin_departure_date" name="origin_departure_date" placeholder="Departure Date" class="form-control" value="<%=DateTime.parse(@date_time_departure).to_date.to_s%>">

              <!-- Destination Parameters -->
              <input type="hidden" id="destination_query" name="destination_query" placeholder="Destination Query" class="form-control" value="<%=@destination_request%>">
              <input type="hidden" id="destination_city" name="destination_city" placeholder="Destination City" class="form-control" value="<%=@destination_city.to_s%>">
              <input type="hidden" id="destination_formatted_address" name="destination_formatted_address" placeholder="Destination Place" class="form-control" value="<%=@destination_formatted_address.to_s%>">
              <input type="hidden" id="google_id_destination" name="google_id_destination" placeholder="Destination Google ID" class="form-control" value="<%=@google_id_destination.to_s%>">
              <input type="hidden" id="destination_arrival_date_time" name="destination_arrival_date_time" placeholder="Destination Arrival Date Time" class="form-control" value="<%=@date_time_arrival_formatted.to_s%>">
              <input type="hidden" id="destination_arrival_time_interval" name="destination_arrival_time_interval" placeholder="Destination Arrival Time Interval" class="form-control" value="<%=@destination_arrival_time_interval%>">
            </div>
            <button class="btn btn-primary btn-lg btn-block">
              Create Route
            </button>
          </form>
          <button class="btn btn-default btn-lg btn-block btn-warning">
            <a href="/route_requests/new">
              Back
            </a>
          </button>
        </div>
      </div>
    </div>
  </div>


</body>
</html>

<script src="https://maps.google.com/maps/api/js?v=3.24&key=AIzaSyCOTPWiuvyyo6sKoIBzKA4-1ol-vTOIOlM"></script>
<script src="//cdn.rawgit.com/mahnunchik/markerclustererplus/master/dist/markerclusterer.min.js"></script>
<script src='//cdn.rawgit.com/printercu/google-maps-utility-library-v3-read-only/master/infobox/src/infobox_packed.js' type='text/javascript'></script> <!-- only if you need custom infoboxes -->
<script>
handler_1 = Gmaps.build('Google');
handler_1.buildMap({ provider: {}, internal: {id: 'origin_map'}}, function(){
  markers = handler_1.addMarkers([
    {
      "lat": <%= @origin_lat.to_s.to_f %>,
      "lng": <%= @origin_long.to_s.to_f %>,
      "infowindow": "<h5>Origin: </h5><small><%= @origin_formatted_address %></small>"
    }
  ]);
  handler_1.bounds.extendWith(markers);
  handler_1.fitMapToBounds();
  handler_1.getMap().setZoom(14)
});

handler_2 = Gmaps.build('Google');
handler_2.buildMap({ provider: {}, internal: {id: 'destination_map'}}, function(){
  markers = handler_2.addMarkers([
    {
      "lat": <%= @destination_lat.to_s.to_f %>,
      "lng": <%= @destination_long.to_s.to_f %>,
      "infowindow": "<h5>Destination: </h5><small><%= @destination_formatted_address %> </small>"
    }
  ]);
  handler_2.bounds.extendWith(markers);
  handler_2.fitMapToBounds();
  handler_2.getMap().setZoom(14)
});


var directionsDisplay = new google.maps.DirectionsRenderer();
var directionsService = new google.maps.DirectionsService();

function calcRoute() {
  var origin      = new google.maps.LatLng(<%=@origin_lat.to_s.to_f%>, <%=@origin_long.to_s.to_f%>);
  var destination = new google.maps.LatLng(<%=@destination_lat.to_s.to_f%>, <%=@destination_long.to_s.to_f%>);
  var request = {
    origin:      origin,
    destination: destination,
    travelMode:  google.maps.TravelMode.DRIVING
  };
  directionsService.route(request, function(response, status) {
    if (status == google.maps.DirectionsStatus.OK) {
      directionsDisplay.setDirections(response);
    }
  });
}

calcRoute();

var handler = Gmaps.build('Google');
handler.buildMap({ internal: {id: 'directions'}}, function(){
  directionsDisplay.setMap(handler.getMap());
});

</script>
